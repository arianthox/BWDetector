plugins {
	id 'org.springframework.boot' version '2.2.7.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
}

def defaultEncoding = 'UTF-8'
[compileJava, compileTestJava]*.options*.encoding = defaultEncoding

group = 'com.globant/BrainWaves/BWDetector'
version = '0.0.1-SNAPSHOT'


repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
}

ext {
	set('springCloudVersion', "Hoxton.RC2")
	set('AkkaVersion', "2.6.1")
	set('AlpakkaVersion', "1.1.2")
	set('AlpakkaKafkaVersion', "1.1.0")
}


sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
	compileOnly {
		extendsFrom annotationProcessor
	}
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation "com.lightbend.akka:akka-stream-alpakka-elasticsearch_2.12:${AlpakkaVersion}"
	implementation "com.typesafe.akka:akka-stream-kafka_2.13:${AlpakkaKafkaVersion}"
	implementation "com.typesafe.akka:akka-stream_2.12:${AkkaVersion}"
	implementation "com.typesafe.akka:akka-actor-typed_2.13:${AkkaVersion}"
	implementation "com.typesafe.akka:akka-actor_2.13:${AkkaVersion}"
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}


sourceSets {
	main {
		java.srcDirs = ['src/main/java']
	}
}
tasks.withType(Pmd){
	reports{
		xml.enabled=true
		html.enabled=true
	}
}



// make sure bootRun is executed when this task runs
task runStandalone(dependsOn:bootRun) {
	// TaskExecutionGraph is populated only after
	// all the projects in the build have been evaulated https://docs.gradle.org/current/javadoc/org/gradle/api/execution/TaskExecutionGraph.html#whenReady-groovy.lang.Closure-
	gradle.taskGraph.whenReady { graph ->
		logger.lifecycle('>>> Setting spring.profiles.active to Standalone')
		if (graph.hasTask(runStandalone)) {
			// configure task before it is executed
			bootRun {
				args = ["--spring.profiles.active=standalone"]
			}
		}
	}
}

